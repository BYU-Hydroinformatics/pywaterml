language: python
# python:
#   - "3.6"
install:
  - pip install --upgrade pip && pip install -r requirements.txt
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - source "$HOME/miniconda/etc/profile.d/conda.sh"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda

  # Useful for debugging any issues with conda
  - conda info -a
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
  - conda activate test-environment
  - conda config --add channels conda-forge
  - conda install --file requirements.txt
  - conda config --add channels elkingio
  - conda install conda-build jinja2 anaconda-client
  # - conda config --set anaconda_upload yes
  - conda build conda.recipe/meta.yaml
  # - conda install python=3.7
  - conda install pywaterml --use-local

script:
  - echo $(which pytest) && pytest
  # convert package to other platforms
  # conda convert --platform all /home/travis/miniconda/envs/test-environment/conda-bld/**/pywaterml-*.tar.bz2 --output-dir conda-bld/
  # anaconda upload /home/travis/miniconda/envs/test-environment/conda-bld/**/pywaterml-*.tar.bz2

after_sucess:
  - chmod +x ./deploy_anaconda.sh

  - |
    # Only upload builds from tags
    if [[ $TRAVIS_PULL_REQUEST == false && $TRAVIS_REPO_SLUG == "romer8/pywaterml"
          && $TRAVIS_BRANCH == $TRAVIS_TAG  && $TRAVIS_TAG != '' ]]; then
      export ANACONDA_API_TOKEN=$ANACONDA_TOKEN
      platforms=( osx-64 linux-32 linux-64 win-32 win-64 )
      find /home/travis/miniconda/envs/test-environment/conda-bld/linux-64/ -name *.tar.bz2 | while read file
      do
          echo $file
          #conda convert --platform all $file  -o /home/travis/miniconda/envs/test-environment/conda-bld/
          for platform in "${platforms[@]}"
          do
             conda convert --platform $platform $file  -o /home/travis/miniconda/envs/test-environment/conda-bld/
          done
      done
      find /home/travis/miniconda/envs/test-environment/conda-bld/ -name *.tar.bz2 | while read file
      do
          echo $file
          anaconda upload $file
      done

      echo "Building conda package done!"
    fi

deploy:
  - provider: pypi
    username: elkingio
    password:
      secure: nneflO1mqMk08VDmg4t/jI0IFPoQzV9o8oRq8KGA9Czzm1bUYbdHCFOaGmdj9SHDP/94g3SamCdjkYuj56zyFMh1DFh117onXfvZmYixb+l1y7tjYSrHVsbV+4k+RtdJB14nP5C+s4GDO20QXDvtybx6ARX0egJsf6ix9KAxV2Jpw0EGhJELEHzYkbhuF7msi5aYVUv47G8e7zdwOUTBclAH9G5X8LmNot/F5sc+JSK/8KaicZOWS7Ked67AxResQ2ycybxZvH9V8WqLtFoWaOjtaFaiwRlSfLNr5EMrlNWNnZsK3tveDEpO+ekHWafpAcKpv35P6I28obXxNYGIFFIZcA5jJ7ZyvH89RgomXmDyWE7XaKlxZ6uIvPyGc1bjUJYotVjKPkE0vZ5F9tpbuFFs4e/9an3L3zo1VTaCBFsX0DRwSICT/5OmZQZReMGbFKlzJ6NCqg/MX7F8GrY96S3pU/jis1A3Cn84e6ohrc+F2e/iGhElPX9VILRVCmjg5i73+ChFT+yuXYo767VQwNZpyB6CwzEFerAvyCcCoGXyqnInU0XjJy609Herlfk9vitDQKnuI/dt726dnouzIvOrzH5EVZakEE3KeRv0T7kAsHs1KCtiY2IuAbhg7SgyCJMoPRe5OJBOotrKQYncPPUQc0Mer7YcHrRB0Gh8AoA=
    distributions: sdist bdist_wheel
    skip_existing: true
    skip_cleanup: true
    on:
      branch: master
      tags: true

   # Deploy to Anaconda.org
  # - provider: script
  #   script: bash conda.recipe/deploy_anaconda.sh
  #   on:
  #     tags: true
  #   skip_cleanup: true
  #   skip_existing: true
